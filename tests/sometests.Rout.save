
R Under development (unstable) (2019-06-27 r76743) -- "Unsuffered Consequences"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(durmod)
> data.table::setDTthreads(1)
> set.seed(42)
> dataset <- datagen(4000,1200)
> print(dataset)
         id         x1         x2 alpha       d    duration     state
    1:    1  1.3709584 -0.1418087     0     job  1.26241296     unemp
    2:    2 -0.5646982 -0.8138981     0     job  7.62670638     unemp
    3:    3  0.3631284 -0.3255406     0     job  7.43731642     unemp
    4:    4  0.6328626  0.3781574     0    none 17.29848885     unemp
    5:    4  1.0400484  0.3061439     0    none 10.01972491     unemp
   ---                                                               
10344: 3999  0.8504394  1.3854584     0    none  0.12460178     unemp
10345: 3999  1.5737882  2.0354354     0    none  2.71525885     unemp
10346: 3999  0.2756904 -0.3102229     0     job  9.26768420     unemp
10347: 4000 -0.4080361 -1.1617422     0 program  0.01954401     unemp
10348: 4000 -0.4080361 -1.1617422     1     job  1.41847637 onprogram
> risksets <- list(c('job','program'), c('job'))
> options(digits=3)
> # just two iterations to save time
> 
> opt <- mphcrm(d ~ x1+x2+C(job,alpha)+D(duration)+S(alpha+1)+ID(id), data=dataset, risksets=risksets,
+               control=mphcrm.control(threads=1,iters=2,callback=NULL))
> best <- opt[[1]]
> print(best)
Estimate with 2 points, log-likelihood: -19080.6082
    job.x1     job.x2  job.alpha program.x1 program.x2 
    0.9943    -0.9038    -0.0917     0.9629     0.4030 

Proportional hazard distribution
          prob   job program
point  1 0.675 0.152  0.0885
point  2 0.325 0.025  0.0203
> summary(best)
$loglik
[1] -19081

$coefs
             value     se      t Pr(>|t|)
job.x1      0.9943 0.0145  68.53 0.00e+00
job.x2     -0.9038 0.0130 -69.52 0.00e+00
job.alpha  -0.0917 0.0415  -2.21 2.71e-02
program.x1  0.9629 0.0226  42.57 0.00e+00
program.x2  0.4030 0.0237  16.99 7.20e-64

$moments
          mean variance     sd
job     0.1109  0.00355 0.0596
program 0.0664  0.00102 0.0319

> mphdist(best)
          prob   job program
point  1 0.675 0.152  0.0885
point  2 0.325 0.025  0.0203
> mphcov(best)
            job program
job     0.00355 0.00190
program 0.00190 0.00102
> 
> # Then make a state factor
> state <- dataset[,factor(alpha+1,levels=1:2)]
> levels(state) <- c('unemp','onprogram')
> dataset$state <- state
> names(risksets) <- levels(state)
> dataset[, f := factor(sample(1:6,.N,replace=TRUE))]
> dataset[, g := factor(sample(1:4,.N,replace=TRUE))]
> opt <- mphcrm(d ~ x1+x2+C(job,alpha+f)+D(duration)+C(program,f*g) + S(state)+ID(id), data=dataset, 
+               risksets=risksets, control=mphcrm.control(threads=1,iters=1,callback=NULL))
> 
> summary(opt[[1]])
$loglik
[1] -19815

$coefs
                  value      se        t Pr(>|t|)
job.x1           0.8967 0.00954   93.989 0.00e+00
job.x2          -0.8051 0.00738 -109.120 0.00e+00
job.alpha       -0.1788 0.02651   -6.744 1.63e-11
job.f.2         -0.1316 0.04163   -3.161 1.58e-03
job.f.3         -0.1382 0.04296   -3.217 1.30e-03
job.f.4         -0.1458 0.04396   -3.317 9.14e-04
job.f.5         -0.1683 0.04361   -3.859 1.15e-04
job.f.6         -0.2121 0.03802   -5.579 2.47e-08
program.x1       0.9148 0.01801   50.783 0.00e+00
program.x2       0.3729 0.01811   20.595 2.12e-92
program.f.2     -0.2780 0.14529   -1.913 5.58e-02
program.f.3     -0.0563 0.13897   -0.405 6.86e-01
program.f.4     -0.3279 0.14012   -2.340 1.93e-02
program.f.5     -0.2471 0.14284   -1.730 8.37e-02
program.f.6     -0.4639 0.13034   -3.559 3.74e-04
program.g.2     -0.4135 0.12609   -3.280 1.04e-03
program.g.3     -0.3312 0.14803   -2.238 2.53e-02
program.g.4     -0.0369 0.14747   -0.250 8.03e-01
program.f:g.2:2  0.3736 0.20690    1.806 7.10e-02
program.f:g.2:3  0.4735 0.21125    2.241 2.50e-02
program.f:g.2:4  0.0920 0.21105    0.436 6.63e-01
program.f:g.3:2  0.1561 0.19140    0.816 4.15e-01
program.f:g.3:3  0.1442 0.20409    0.706 4.80e-01
program.f:g.3:4 -0.2434 0.20214   -1.204 2.29e-01
program.f:g.4:2  0.6377 0.20171    3.161 1.57e-03
program.f:g.4:3  0.5106 0.20665    2.471 1.35e-02
program.f:g.4:4  0.0267 0.20826    0.128 8.98e-01
program.f:g.5:2  0.2280 0.19230    1.186 2.36e-01
program.f:g.5:3  0.6444 0.21921    2.939 3.29e-03
program.f:g.5:4  0.0360 0.22715    0.159 8.74e-01
program.f:g.6:2  0.7247 0.19768    3.666 2.48e-04
program.f:g.6:3  0.4972 0.19777    2.514 1.20e-02
program.f:g.6:4  0.0818 0.19282    0.424 6.72e-01

$moments
          mean variance sd
job     0.0731        0  0
program 0.0537        0  0

> 
> # single risk
> dataset <- dataset[state=='onprogram']
> opt <- mphcrm(d ~ x1+x2+D(duration)+ID(id), data=dataset, 
+               control=mphcrm.control(threads=1,iters=1,callback=NULL))
> summary(opt[[1]]$par)
$value
job.x1 job.x2 
 0.813 -0.835 

$moments
         prob    job
point  1    1 0.0558

> 
> proc.time()
   user  system elapsed 
  8.494   0.116   3.212 
