// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cloglik
NumericVector cloglik(List spec, List pset, const bool gdiff, const bool dogradient, const bool dofisher, const int nthreads);
RcppExport SEXP _durmod_cloglik(SEXP specSEXP, SEXP psetSEXP, SEXP gdiffSEXP, SEXP dogradientSEXP, SEXP dofisherSEXP, SEXP nthreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type spec(specSEXP);
    Rcpp::traits::input_parameter< List >::type pset(psetSEXP);
    Rcpp::traits::input_parameter< const bool >::type gdiff(gdiffSEXP);
    Rcpp::traits::input_parameter< const bool >::type dogradient(dogradientSEXP);
    Rcpp::traits::input_parameter< const bool >::type dofisher(dofisherSEXP);
    Rcpp::traits::input_parameter< const int >::type nthreads(nthreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(cloglik(spec, pset, gdiff, dogradient, dofisher, nthreads));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_durmod_cloglik", (DL_FUNC) &_durmod_cloglik, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_durmod(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
